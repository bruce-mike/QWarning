; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--c99 --debug -c --asm -o.\objs\main.o --depend=.\objs\main.d --apcs=interwork -Otime --diag_suppress=9931 -IC:\Keil\ARM\INC\Phillips -I..\SharedCode -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips --enum_is_int --omf_browse=.\objs\main.crf Main.c]
        ARM
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

        REQUIRE _printf_percent
        REQUIRE _printf_c
        REQUIRE _printf_str
        REQUIRE _printf_d
        REQUIRE _printf_int_dec
        REQUIRE _printf_s
        REQUIRE _printf_str
        REQUIRE _printf_str
        REQUIRE _printf_str
        REQUIRE _printf_str
        REQUIRE _printf_str
        REQUIRE _printf_pre_padding
        REQUIRE _printf_flags
        REQUIRE _printf_widthprec
        REQUIRE _printf_x
        REQUIRE _printf_longlong_hex
anyIncomingDebug PROC
        PUSH     {r3-r11,lr}
        LDR      r8,|L1.768|
        MOV      r9,#0
        MOV      r11,#0xc000
        ADD      r11,r11,#0xe0000000
        MOV      r10,#1
        SUB      r6,r8,#0xc
        STR      r9,[sp,#0]
|L1.32|
        LDR      r0,[r11,#0x14]
        TST      r0,#1
        POPEQ    {r3-r11,lr}
        BXEQ     lr
        LDR      r0,[r11,#0]
        AND      r4,r0,#0x7f
        LDRB     r0,[r6,#4]  ; debugEnabled
        CMP      r0,#0
        BEQ      |L1.80|
        MOV      r1,r4
        ADR      r0,|L1.772|
        BL       __2printf
|L1.80|
        LDRB     r0,[r6,#5]  ; index
        CMP      r4,#0xd
        STRB     r4,[r8,r0]
        ADD      r0,r0,#1
        AND      r0,r0,#7
        STRB     r0,[r6,#5]  ; index
        BEQ      |L1.120|
        CMP      r4,#0xa
        BNE      |L1.32|
        B        |L1.136|
|L1.120|
        LDRB     r0,[r6,#4]  ; debugEnabled
        CMP      r0,#0
        ADRNE    r0,|L1.776|
        BLNE     __2printf
|L1.136|
        LDRB     r0,[r6,#5]  ; index
        SUB      r1,r0,#2
        AND      r0,r1,#7
        LDRB     r0,[r8,r0]
        CMP      r0,#0x44
        CMPNE    r0,#0x64
        STRBEQ   r10,[r6,#4]  ; debugEnabled
        BEQ      |L1.184|
        LDRB     r0,[r6,#4]  ; debugEnabled
        CMP      r0,#0
        POPEQ    {r3-r11,lr}
        BXEQ     lr
|L1.184|
        AND      r0,r1,#7
|L1.188|
        LDRB     r1,[r8,r0]
        CMP      r1,#0xd
        CMPNE    r1,#0xa
        BEQ      |L1.220|
        CMP      r1,#0
        SUBNE    r0,r0,#1
        ANDNE    r0,r0,#7
        BNE      |L1.188|
|L1.220|
        ADD      r0,r0,#1
        AND      r0,r0,#7
        LDRB     r7,[r8,r0]
        ADD      r5,r0,#1
        MOV      r4,#0
        STR      r9,[sp,#0]
        BL       __rt_ctype_table
        MOV      r2,sp
|L1.252|
        LDRB     r1,[r8,r5]
        LDR      r3,[r0,#0]
        LDRB     r3,[r3,r1]
        TST      r3,#0x38
        BEQ      |L1.292|
        ADD      r3,r4,#1
        STRB     r1,[r2,r4]
        AND      r4,r3,#0xff
        CMP      r4,#4
        BHI      |L1.320|
|L1.292|
        CMP      r1,#0xd
        CMPNE    r1,#0xa
        BEQ      |L1.320|
        CMP      r1,#0
        ADDNE    r1,r5,#1
        ANDNE    r5,r1,#7
        BNE      |L1.252|
|L1.320|
        MOV      r0,r2
        BL       atoi
        LSL      r0,r0,#16
        SUB      r1,r7,#0x30
        CMP      r1,#0x4b
        LSR      r0,r0,#16
        LDRCC    pc,[pc,r1,LSL #2]
||__switch$$||                  ; Alternate entry point
        B        |L1.2184|
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||+0x72c
        DCD      ||__switch$$||+0x72c
        DCD      ||__switch$$||+0x72c
        DCD      ||__switch$$||+0x72c
        DCD      ||__switch$$||+0x72c
        DCD      ||__switch$$||+0x138
        DCD      ||__switch$$||+0x72c
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||+0x130
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||+0x72c
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||+0x72c
        DCD      ||__switch$$||+0x72c
        DCD      ||__switch$$||+0x300
        DCD      ||__switch$$||+0x310
        DCD      ||__switch$$||+0x320
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||+0x32c
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||+0x33c
        DCD      ||__switch$$||+0x714
        DCD      ||__switch$$||+0x72c
        DCD      ||__switch$$||+0x72c
        DCD      ||__switch$$||+0x72c
        DCD      ||__switch$$||+0x724
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||+0x72c
        DCD      ||__switch$$||+0x72c
        DCD      ||__switch$$||+0x72c
        DCD      ||__switch$$||+0x72c
        DCD      ||__switch$$||+0x72c
        DCD      ||__switch$$||+0x72c
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||+0x130
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||+0x72c
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||+0x72c
        DCD      ||__switch$$||+0x72c
        DCD      ||__switch$$||+0x72c
        DCD      ||__switch$$||+0x300
        DCD      ||__switch$$||+0x310
        DCD      ||__switch$$||+0x320
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||+0x32c
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||+0x33c
        DCD      ||__switch$$||+0x714
        DCD      ||__switch$$||+0x72c
        DCD      ||__switch$$||+0x72c
        DCD      ||__switch$$||+0x72c
        DCD      ||__switch$$||+0x724
        DCD      ||__switch$$||-0x13c
        DCD      ||__switch$$||-0x13c
        ADR      r0,|L1.780|
        BL       __2printf
        ADR      r0,|L1.812|
        BL       __2printf
        ADR      r0,|L1.840|
        BL       __2printf
        ADR      r0,|L1.864|
        BL       __2printf
        ADR      r0,|L1.888|
        BL       __2printf
        ADR      r0,|L1.912|
        BL       __2printf
        ADR      r0,|L1.932|
        BL       __2printf
        ADR      r0,|L1.968|
        BL       __2printf
        ADR      r0,|L1.980|
        BL       __2printf
        ADR      r0,|L1.1020|
        BL       __2printf
        ADD      r0,pc,#0x4c, 30 ; #0x130
        BL       __2printf
        ADR      r0,|L1.1060|
        BL       __2printf
        ADD      r0,pc,#0x50, 30 ; #0x140
        BL       __2printf
        ADR      r0,|L1.1096|
|L1.760|
        BL       __2printf
        B        |L1.32|
|L1.768|
        DCD      ||.data||+0xc
|L1.772|
        DCB      "%c",0
        DCB      0
|L1.776|
        DCB      "\n",0
        DCB      0
        DCB      0
|L1.780|
        DCB      "\r\n*** Debug mode Enabled ***\r\n",0
        DCB      0
|L1.812|
        DCB      " 0 - Reset all devices\r\n",0
        DCB      0
        DCB      0
        DCB      0
|L1.840|
        DCB      " D - Enable Debug\r\n\n",0
        DCB      0
        DCB      0
        DCB      0
|L1.864|
        DCB      " F - Factory reset\r\n\n",0
        DCB      0
        DCB      0
|L1.888|
        DCB      " L - Start Logging\r\n",0
        DCB      0
        DCB      0
        DCB      0
|L1.912|
        DCB      " M - Stop Logging\r\n",0
|L1.932|
        DCB      " N - Dump Log, 1 - 999K ie. N 12\r\n",0
        DCB      0
|L1.968|
        DCB      " O -   \r\n",0
        DCB      0
        DCB      0
|L1.980|
        DCB      " P - Set log sample time in seconds\r\n",0
        DCB      0
        DCB      0
|L1.1020|
        DCB      " Q - Erase Logging\r\n\n",0
        DCB      0
        DCB      0
        DCB      " S - Status\r\n\n",0
        DCB      0
|L1.1060|
        DCB      " T - Tokens\r\n\n",0
        DCB      0
        DCB      " X - Exit Debug\r\n",0
        DCB      0
        DCB      0
|L1.1096|
        DCB      " ? - This menu\r\n",0
        DCB      0
        DCB      0
        DCB      0
        ADR      r0,|L1.1568|
        BL       __2printf
        BL       turnOnLogging
        B        |L1.32|
        ADR      r0,|L1.1588|
        BL       __2printf
        BL       turnOffLogging
        B        |L1.32|
        LSL      r0,r0,#10
        BL       dumpLog
        B        |L1.32|
        ADR      r0,|L1.1604|
        BL       __2printf
        BL       eraseLogging
        B        |L1.32|
        MOV      r1,#1
        ADR      r0,|L1.1624|
        BL       __2printf
        MOV      r1,#3
        ADR      r0,|L1.1644|
        BL       __2printf
        MOV      r1,r10
        ADR      r0,|L1.1648|
        BL       __2printf
        BL       getBoardRev
        MOV      r1,r0
        ADR      r0,|L1.1656|
        BL       __2printf
        BL       getReportingTimeSecs
        MOV      r1,r0
        ADR      r0,|L1.1672|
        BL       __2printf
        BL       getAverageWindowTimeSecs
        MOV      r1,r0
        ADR      r0,|L1.1712|
        BL       __2printf
        BL       getMinSpeedThreshold
        MOV      r1,r0
        ADR      r0,|L1.1740|
        BL       __2printf
        MOV      r0,#0xa
        BL       getNonZeroRadarReadings
        MOV      r1,r0
        ADR      r0,|L1.1772|
        BL       __2printf
        MOV      r0,#0xa
        BL       getTotalRadarReadings
        MOV      r1,r0
        ADR      r0,|L1.1808|
        BL       __2printf
        MOV      r0,#0xa
        BL       getOccupancyPercent
        MOV      r1,r0
        ADR      r0,|L1.1836|
        BL       __2printf
        MOV      r0,#0xa
        BL       getAvgSpeed
        MOV      r1,r0
        ADR      r0,|L1.1856|
        BL       __2printf
        BL       getLastRadarReading
        MOV      r1,r0
        ADR      r0,|L1.1880|
        BL       __2printf
        ADR      r0,|L1.1584|
        BL       __2printf
        BL       getAverageWindowTimeSecs
        MOV      r1,#0x3e8
        MUL      r0,r1,r0
        BL       getSensorOccupancy
        AND      r2,r0,#0xff
        LSR      r1,r0,#8
        ADD      r0,pc,#0x7c, 30 ; #0x1f0
        BL       __2printf
        MOV      r0,#0x86
        ADD      r0,r0,#0x2400
        BL       getSensorOccupancy
        AND      r2,r0,#0xff
        LSR      r1,r0,#8
        ADR      r0,|L1.1948|
        BL       __2printf
        BL       getSensorTriggerDistanceLow
        BL       getDistanceString
        MOV      r1,r0
        ADD      r0,pc,#0x84, 30 ; #0x210
        BL       __2printf
        BL       getSensorTriggerDistanceHigh
        BL       getDistanceString
        MOV      r1,r0
        ADD      r0,pc,#0x88, 30 ; #0x220
        BL       __2printf
        BL       getLasSensortReading
        BL       getDistanceString
        MOV      r1,r0
        ADD      r0,pc,#0x8c, 30 ; #0x230
        BL       __2printf
        BL       ADCGetBatteryVoltage
        MOV      r1,r0
        ADD      r0,pc,#0x90, 30 ; #0x240
        BL       __2printf
        BL       printOutAlarmBits
        MOV      r1,r0
        ADD      r0,pc,#0x90, 30 ; #0x240
        BL       __2printf
        ADR      r0,|L1.1584|
        BL       __2printf
        BL       isLoggingEnabled
        CMP      r0,#0
        ADRNE    r1,|L1.2128|
        ADREQ    r1,|L1.2132|
        ADD      r0,pc,#0x90, 30 ; #0x240
|L1.1560|
        BL       __2printf
        B        |L1.32|
|L1.1568|
        DCB      "Starting Logging"
|L1.1584|
        DCB      "\r\n",0
        DCB      0
|L1.1588|
        DCB      "Stop Logging\r\n",0
        DCB      0
|L1.1604|
        DCB      "Erasing Log Data\r\n",0
        DCB      0
|L1.1624|
        DCB      "Firmware Ver: %d.",0
        DCB      0
        DCB      0
|L1.1644|
        DCB      "%d.",0
|L1.1648|
        DCB      "%d\r\n",0
        DCB      0
        DCB      0
        DCB      0
|L1.1656|
        DCB      "Board rev %d\r\n",0
        DCB      0
|L1.1672|
        DCB      "Periodic reporting telemetry %d Secs\r\n",0
        DCB      0
|L1.1712|
        DCB      "Averaging window %d Secs\r\n",0
        DCB      0
|L1.1740|
        DCB      "Min speed threshold %d MPH\r\n",0
        DCB      0
        DCB      0
        DCB      0
|L1.1772|
        DCB      "Total non-zero Radar readings %d\r\n",0
        DCB      0
|L1.1808|
        DCB      "Total Radar readings %d\r\n",0
        DCB      0
        DCB      0
|L1.1836|
        DCB      "Occupancy %d%%\r\n",0
        DCB      0
        DCB      0
        DCB      0
|L1.1856|
        DCB      "Average speed %d MPH\r\n",0
        DCB      0
|L1.1880|
        DCB      "Last radar reading %d MPH\r\n",0
        DCB      "Public ultrasonic occupancy %d / %d\r\n",0
        DCB      0
        DCB      0
|L1.1948|
        DCB      "Internal ultrasonic occupancy %d / %d\r\n",0
        DCB      "Ultrasonic distance trip low %s\r\n",0
        DCB      0
        DCB      0
        DCB      "Ultrasonic distance trip high %s\r\n",0
        DCB      0
        DCB      "Last ultrasonic reading %s\r\n",0
        DCB      0
        DCB      0
        DCB      0
        DCB      "Battery %d mV\r\n",0
        DCB      "Alarm bits: %s\r\n",0
        DCB      0
        DCB      0
        DCB      0
|L1.2128|
        DCB      " is",0
|L1.2132|
        DCB      " not",0
        DCB      0
        DCB      0
        DCB      0
        DCB      "Logging%s Enabled\r\n",0
        BL       getTokens
        MOV      r1,r0
        ADR      r0,|L1.2192|
        B        |L1.1560|
        STRB     r9,[r6,#4]  ; debugEnabled
        B        |L1.32|
|L1.2184|
        ADR      r0,|L1.2216|
        B        |L1.760|
|L1.2192|
        DCB      "Remaining Tokens %d\r\n",0
        DCB      0
        DCB      0
|L1.2216|
        DCB      "Unknown command\r\n",0
        DCB      0
        DCB      0
        ENDP

main PROC
        MOV      r1,#0x6a0
        MOV      r0,#0
        ADD      r1,r1,#0x18000
|L1.2248|
        MOV      r0,r0
        ADD      r0,r0,#1
        CMP      r0,r1
        BCC      |L1.2248|
        BL       GPIO_CONFIG
        MOV      r4,#0
        MOV      r0,r4
        BL       PLL_CLOCK_SETUP
        BL       init_VIC
        MOV      r0,r4
        BL       timerInit
        MOV      r0,r4
        BL       serialInit
        MOV      r0,r4
        BL       framInit
        BL       initRadar
        MOV      r0,r4
        BL       sensorInit
        MOV      r0,r4
        BL       ADCInit
        LDR      r0,|L1.2936|
        BL       watchdogInit
        BL       miscInit
        BL       assetTrackerInit
        BL       getTimeNow
        MOV      r7,r0
        ADR      r0,|L1.2940|
        BL       __2printf
        BL       getBoardRev
        MOV      r1,r0
        ADR      r0,|L1.2964|
        BL       __2printf
        MOV      r1,#1
        ADR      r0,|L1.2980|
        BL       __2printf
        MOV      r6,#1
        MOV      r1,#3
        ADR      r0,|L1.2992|
        BL       __2printf
        MOV      r1,r6
        ADR      r0,|L1.3000|
        BL       __2printf
        MOV      r0,#0x1fc000
        ADD      r0,r0,#0xe0000000
        LDR      r0,[r0,#0x180]
        LDR      r5,|L1.3008|
        STR      r0,[r5,#8]  ; resetRegister
        ADR      r0,|L1.3012|
        BL       __2printf
        LDRB     r0,[r5,#8]  ; resetRegister
        TST      r0,#1
        ADRNE    r0,|L1.3020|
        BLNE     __2printf
        LDRB     r0,[r5,#8]  ; resetRegister
        TST      r0,#2
        ADRNE    r0,|L1.3028|
        BLNE     __2printf
        LDRB     r0,[r5,#8]  ; resetRegister
        TST      r0,#4
        ADRNE    r0,|L1.3044|
        BLNE     __2printf
        LDRB     r0,[r5,#8]  ; resetRegister
        TST      r0,#8
        ADRNE    r0,|L1.3056|
        BLNE     __2printf
        ADR      r0,|L1.2976|
        BL       __2printf
|L1.2516|
        BL       sensorDoWork
        BL       radarSerialDoWork
        BL       assetSerialDoWork
        BL       ledsDoWork
        BL       rateLimiterDoWork
        BL       assetTrackerDoWork
        BL       radarDoWork
        MOV      r1,#0xfa
        MOV      r0,r7
        BL       hasTimedOut
        CMP      r0,#0
        BEQ      |L1.2516|
        BL       getTimeNow
        MOV      r7,r0
        BL       watchdogFeed
        BL       ADCDoWork
        LDRB     r0,[r5,#0]  ; doneOnce
        CMP      r0,#0
        STRBEQ   r6,[r5,#0]  ; doneOnce
        BL       getModeSelect
        MOVS     r4,r0
        BEQ      |L1.2912|
        MOV      r1,r0
        ADR      r0,|L1.3068|
        BL       __2printf
        BL       toggleYellowLED
        CMP      r4,#2
        BEQ      |L1.2840|
        CMP      r4,#3
        BEQ      |L1.2876|
        CMP      r4,#4
        BEQ      |L1.2908|
        CMP      r4,#9
        BNE      |L1.2912|
        LDRB     r0,[r5,#8]  ; resetRegister
        TST      r0,#2
        BEQ      |L1.2912|
        MOV      r4,#0
        MOV      r0,r4
        BL       setRedLED
        MOV      r0,#0
        BL       setGreenLED
        MOV      r0,#1
        BL       setYellowLED
        BL       getTimeNow
        BL       showNTell
        MOV      r5,r0
        BL       factoryResetFramDevice
        CMP      r0,#0
        MOVEQ    r4,#1
        MOV      r0,r5
        BL       showNTell
        BL       showNTell
        MOV      r5,r0
        BL       setFactoryDefaults
        MOV      r0,r5
        BL       showNTell
        BL       showNTell
        BL       showNTell
        BL       showNTell
        CMP      r4,#0
        BEQ      |L1.2808|
        MOV      r0,#1
        BL       setRedLED
        MOV      r0,#0
        BL       setYellowLED
        MOV      r1,r4
        ADR      r0,|L1.3100|
        BL       __2printf
|L1.2792|
        BL       watchdogFeed
        MOV      r0,#0
        BL       setGreenLED
        B        |L1.2792|
|L1.2808|
        MOV      r0,#0
        BL       setRedLED
        MOV      r0,#1
        BL       setYellowLED
|L1.2824|
        BL       watchdogFeed
        MOV      r0,#1
        BL       setGreenLED
        B        |L1.2824|
|L1.2840|
        LDRB     r0,[r5,#2]  ; done
        CMP      r0,#0
        BNE      |L1.2912|
        ADR      r0,|L1.3116|
        BL       __2printf
        BL       turnOffLogging
        BL       eraseLogging
        STRB     r6,[r5,#2]  ; done
        B        |L1.2912|
|L1.2876|
        LDRB     r0,[r5,#3]  ; done
        CMP      r0,#0
        BNE      |L1.2912|
        ADR      r0,|L1.3144|
        BL       __2printf
        BL       turnOnLogging
        STRB     r6,[r5,#3]  ; done
        B        |L1.2912|
|L1.2908|
        BL       turnOffLogging
|L1.2912|
        BL       anyIncomingDebug
        BL       logDoWork
        LDRB     r0,[r5,#1]  ; counter
        ADD      r0,r0,#1
        STRB     r0,[r5,#1]  ; counter
        B        |L1.2516|
|L1.2936|
        DCD      0x00030d41
|L1.2940|
        DCB      "\r\n    QUEUE WARNING\r\n",0
        DCB      0
        DCB      0
|L1.2964|
        DCB      "Board Rev %d"
|L1.2976|
        DCB      "\r\n",0
        DCB      0
|L1.2980|
        DCB      "App F/W %d.",0
|L1.2992|
        DCB      "%02d.",0
        DCB      0
        DCB      0
|L1.3000|
        DCB      "%02d\r\n",0
        DCB      0
|L1.3008|
        DCD      ||.data||
|L1.3012|
        DCB      "Reset: ",0
|L1.3020|
        DCB      "POR, ",0
        DCB      0
        DCB      0
|L1.3028|
        DCB      "External Pin, ",0
        DCB      0
|L1.3044|
        DCB      "WatchDog, ",0
        DCB      0
|L1.3056|
        DCB      "BrownOut ",0
        DCB      0
        DCB      0
|L1.3068|
        DCB      "WARNING: Rotary switch at %d\r\n",0
        DCB      0
|L1.3100|
        DCB      "Status 0x%X\r\n",0
        DCB      0
        DCB      0
|L1.3116|
        DCB      "Logging OFF, Erasing Log\r\n",0
        DCB      0
|L1.3144|
        DCB      "Logging ON\r\n",0
        DCB      0
        DCB      0
        DCB      0
        ENDP

showNTell PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        MOV      r1,#0x1f4
        BL       hasTimedOut
        CMP      r0,#0
        BNE      |L1.3212|
|L1.3184|
        MOV      r0,#0
        BL       setGreenLED
        MOV      r1,#0x1f4
        MOV      r0,r4
        BL       hasTimedOut
        CMP      r0,#0
        BEQ      |L1.3184|
|L1.3212|
        BL       watchdogFeed
        BL       toggleRedLED
        BL       toggleYellowLED
        MOV      r0,#0
        BL       setGreenLED
        POP      {r4,lr}
        B        getTimeNow
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=2

doneOnce
        DCB      0x00
counter
        DCB      0x00
done
        DCB      0x00
|symbol_number.19|
        DCB      0x00
debugEnabled
        DCB      0x00
index
        DCB      0x00,0x00,0x00
resetRegister
        DCD      0x00000000
charBuff
        DCB      0x00,0x00,0x00,0x00
        DCD      0x00000000

__ARM_use_no_argv EQU 0

        EXPORT __ARM_use_no_argv
        EXPORT main [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT _printf_percent [CODE]
        IMPORT _printf_c [CODE]
        IMPORT _printf_str [CODE]
        IMPORT __2printf [CODE]
        IMPORT __rt_ctype_table [CODE]
        IMPORT atoi [CODE]
        IMPORT turnOnLogging [CODE]
        IMPORT turnOffLogging [CODE]
        IMPORT dumpLog [CODE]
        IMPORT eraseLogging [CODE]
        IMPORT _printf_d [CODE]
        IMPORT _printf_int_dec [CODE]
        IMPORT getBoardRev [CODE]
        IMPORT getReportingTimeSecs [CODE]
        IMPORT getAverageWindowTimeSecs [CODE]
        IMPORT getMinSpeedThreshold [CODE]
        IMPORT getNonZeroRadarReadings [CODE]
        IMPORT getTotalRadarReadings [CODE]
        IMPORT getOccupancyPercent [CODE]
        IMPORT getAvgSpeed [CODE]
        IMPORT getLastRadarReading [CODE]
        IMPORT getSensorOccupancy [CODE]
        IMPORT getSensorTriggerDistanceLow [CODE]
        IMPORT getDistanceString [CODE]
        IMPORT _printf_s [CODE]
        IMPORT getSensorTriggerDistanceHigh [CODE]
        IMPORT getLasSensortReading [CODE]
        IMPORT ADCGetBatteryVoltage [CODE]
        IMPORT printOutAlarmBits [CODE]
        IMPORT isLoggingEnabled [CODE]
        IMPORT getTokens [CODE]
        IMPORT GPIO_CONFIG [CODE]
        IMPORT PLL_CLOCK_SETUP [CODE]
        IMPORT init_VIC [CODE]
        IMPORT timerInit [CODE]
        IMPORT serialInit [CODE]
        IMPORT framInit [CODE]
        IMPORT initRadar [CODE]
        IMPORT sensorInit [CODE]
        IMPORT ADCInit [CODE]
        IMPORT watchdogInit [CODE]
        IMPORT miscInit [CODE]
        IMPORT assetTrackerInit [CODE]
        IMPORT getTimeNow [CODE]
        IMPORT _printf_pre_padding [CODE]
        IMPORT _printf_flags [CODE]
        IMPORT _printf_widthprec [CODE]
        IMPORT sensorDoWork [CODE]
        IMPORT radarSerialDoWork [CODE]
        IMPORT assetSerialDoWork [CODE]
        IMPORT ledsDoWork [CODE]
        IMPORT rateLimiterDoWork [CODE]
        IMPORT assetTrackerDoWork [CODE]
        IMPORT radarDoWork [CODE]
        IMPORT hasTimedOut [CODE]
        IMPORT watchdogFeed [CODE]
        IMPORT ADCDoWork [CODE]
        IMPORT getModeSelect [CODE]
        IMPORT toggleYellowLED [CODE]
        IMPORT setRedLED [CODE]
        IMPORT setGreenLED [CODE]
        IMPORT setYellowLED [CODE]
        IMPORT factoryResetFramDevice [CODE]
        IMPORT setFactoryDefaults [CODE]
        IMPORT _printf_x [CODE]
        IMPORT _printf_longlong_hex [CODE]
        IMPORT logDoWork [CODE]
        IMPORT toggleRedLED [CODE]

        KEEP anyIncomingDebug
        KEEP ||__switch$$||
        KEEP showNTell
        KEEP doneOnce
        KEEP counter
        KEEP done
        KEEP |symbol_number.19|
        EXPORTAS |symbol_number.19|, done
        KEEP debugEnabled
        KEEP index
        KEEP resetRegister
        KEEP charBuff

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,2
        ATTR SETVALUE Tag_ABI_optimization_goals,2
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
