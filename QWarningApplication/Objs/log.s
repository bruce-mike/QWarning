; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--c99 --debug -c --asm -o.\objs\log.o --depend=.\objs\log.d --apcs=interwork -Otime --diag_suppress=9931 -IC:\Keil\ARM\INC\Phillips -I..\SharedCode -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips --enum_is_int --omf_browse=.\objs\log.crf log.c]
        ARM
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

        REQUIRE _printf_percent
        REQUIRE _printf_s
        REQUIRE _printf_str
initLogging PROC
        PUSH     {r4,lr}
        LDR      r4,|L1.232|
        MOV      r0,#0
        STRB     r0,[r4,#0]  ; loggingAllowed
        STRB     r0,[r4,#1]  ; dumpingLog
        MOV      r2,#4
        ADD      r1,r4,#8
        MOV      r0,#0x50
        BL       readFramData
        MOV      r0,#0x100
        STR      r0,[r4,#4]  ; dumpIndex
        POP      {r4,lr}
        LDR      r0,|L1.236|
        MOV      r1,#0x50
        B        __aeabi_memclr
        ENDP

getLogCharBuffer PROC
        LDR      r0,|L1.236|
        BX       lr
        ENDP

logDoWork PROC
        PUSH     {r4,lr}
        LDR      r4,|L1.232|
        SUB      sp,sp,#0x20
        LDRB     r0,[r4,#1]  ; dumpingLog
        CMP      r0,#0
        ADDEQ    sp,sp,#0x20
        POPEQ    {r4,lr}
        BXEQ     lr
        LDR      r0,[r4,#4]  ; dumpIndex
        MOV      r2,#0x20
        MOV      r1,sp
        BL       readFramData
        LDR      r0,[r4,#4]  ; dumpIndex
        MOV      r1,sp
        ADD      r0,r0,#0x20
        STR      r0,[r4,#4]  ; dumpIndex
        ADR      r0,|L1.240|
        BL       __2printf
        BL       watchdogFeed
        LDR      r0,[r4,#4]  ; dumpIndex
        MOV      r2,sp
        LDRB     r3,[sp,r0]
        MOV      r1,#0
        CMP      r3,#0xff
        BNE      |L1.184|
        ADD      r2,r2,r0
        LDRB     r2,[r2,#1]
        CMP      r2,#0xff
        BEQ      |L1.216|
|L1.184|
        LDR      r3,[r4,#0xc]  ; dumpLength
        SUB      r2,r0,#0x100
        CMP      r2,r3
        BHI      |L1.216|
        CMP      r0,#0x1000000
        ADDCS    sp,sp,#0x20
        POPCS    {r4,lr}
        BXCS     lr
|L1.216|
        STRB     r1,[r4,#1]  ; dumpingLog
        ADD      sp,sp,#0x20
        POP      {r4,lr}
        BX       lr
|L1.232|
        DCD      ||.data||
|L1.236|
        DCD      ||.bss||
|L1.240|
        DCB      "%s",0
        DCB      0
        ENDP

turnOnLogging PROC
        LDR      r1,|L1.232|
        MOV      r0,#1
        STRB     r0,[r1,#0]  ; loggingAllowed
        BX       lr
        ENDP

turnOffLogging PROC
        LDR      r1,|L1.232|
        MOV      r0,#0
        STRB     r0,[r1,#0]  ; loggingAllowed
        BX       lr
        ENDP

isLoggingEnabled PROC
        LDR      r0,|L1.232|
        LDRB     r0,[r0,#0]  ; loggingAllowed
        BX       lr
        ENDP

eraseLogging PROC
        PUSH     {r4-r6,lr}
        SUB      sp,sp,#0x18
        MOV      r0,#1
        BL       setRedLED
        LDR      r4,|L1.232|
        MOV      r6,#0
        MOV      r2,#1
        MOV      r1,sp
        MOV      r0,#0x20
        STRB     r6,[r4,#0]  ; loggingAllowed
        BL       readFramData
        MOV      r2,#1
        ADD      r1,sp,#4
        MOV      r0,#0x21
        BL       readFramData
        MOV      r2,#2
        ADD      r1,sp,#0xc
        MOV      r0,#0x22
        BL       readFramData
        MOV      r2,#1
        ADD      r1,sp,#8
        MOV      r0,#0x24
        BL       readFramData
        BL       factoryResetFramDevice
        MOV      r2,#1
        MOV      r1,sp
        MOV      r0,#0x20
        BL       writeFramData
        MOV      r2,#1
        ADD      r1,sp,#4
        MOV      r0,#0x21
        BL       writeFramData
        MOV      r2,#2
        ADD      r1,sp,#0xc
        MOV      r0,#0x22
        BL       writeFramData
        MOV      r2,#1
        ADD      r1,sp,#8
        MOV      r0,#0x24
        BL       writeFramData
        MOV      r5,#0x100
        STR      r5,[sp,#0x10]
        STR      r5,[r4,#8]  ; logIndex
        MOV      r2,#4
        ADD      r1,sp,#0x10
        MOV      r0,#0x50
        STR      r5,[r4,#4]  ; dumpIndex
        BL       writeFramData
        STRB     r6,[r4,#0]  ; loggingAllowed
        MOV      r2,#4
        ADD      r1,r4,#8
        MOV      r0,#0x50
        STRB     r6,[r4,#1]  ; dumpingLog
        BL       readFramData
        LDR      r0,|L1.236|
        MOV      r1,#0x50
        STR      r5,[r4,#4]  ; dumpIndex
        BL       __aeabi_memclr
        MOV      r0,#0
        BL       setRedLED
        LDRB     r0,[r4,#0]  ; loggingAllowed
        ADD      sp,sp,#0x18
        POP      {r4-r6,lr}
        BX       lr
        ENDP

printfLog PROC
        PUSH     {r4-r6,lr}
        LDR      r5,|L1.232|
        MOV      r6,r0
        LDRB     r0,[r5,#0]  ; loggingAllowed
        CMP      r0,#0
        POPEQ    {r4-r6,lr}
        BXEQ     lr
        MOV      r0,r6
        BL       strlen
        AND      r4,r0,#0xff
        LDR      r0,[r5,#8]  ; logIndex
        ADD      r0,r0,r4
        CMP      r0,#0x1000000
        MOVCS    r0,#0x100
        STRCS    r0,[r5,#8]  ; logIndex
        BL       watchdogFeed
        LDR      r0,[r5,#8]  ; logIndex
        MOV      r2,r4
        MOV      r1,r6
        BL       writeFramData
        LDR      r0,[r5,#8]  ; logIndex
        LDR      r1,|L1.676|
        ADD      r0,r0,r4
        STR      r0,[r5,#8]  ; logIndex
        POP      {r4-r6,lr}
        MOV      r2,#4
        MOV      r0,#0x50
        B        writeFramData
        ENDP

dumpLog PROC
        LDR      r1,|L1.232|
        STR      r0,[r1,#0xc]  ; dumpLength
        MOV      r0,#1
        STRB     r0,[r1,#1]  ; dumpingLog
        BX       lr
        ENDP

|L1.676|
        DCD      ||.data||+0x8

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=0

logString
        %        80

        AREA ||.data||, DATA, ALIGN=2

loggingAllowed
        DCB      0x00
dumpingLog
        DCB      0x00,0x00,0x00
dumpIndex
        DCD      0x00000100
logIndex
        DCD      0x00000000
dumpLength
        DCD      0x00000000

        EXPORT initLogging [CODE]
        EXPORT getLogCharBuffer [CODE]
        EXPORT logDoWork [CODE]
        EXPORT turnOnLogging [CODE]
        EXPORT turnOffLogging [CODE]
        EXPORT isLoggingEnabled [CODE]
        EXPORT eraseLogging [CODE]
        EXPORT printfLog [CODE]
        EXPORT dumpLog [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT readFramData [CODE]
        IMPORT __aeabi_memclr [CODE]
        IMPORT _printf_percent [CODE]
        IMPORT _printf_s [CODE]
        IMPORT _printf_str [CODE]
        IMPORT __2printf [CODE]
        IMPORT watchdogFeed [CODE]
        IMPORT setRedLED [CODE]
        IMPORT factoryResetFramDevice [CODE]
        IMPORT writeFramData [CODE]
        IMPORT strlen [CODE]

        KEEP logString
        KEEP loggingAllowed
        KEEP dumpingLog
        KEEP dumpIndex
        KEEP logIndex
        KEEP dumpLength

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,2
        ATTR SETVALUE Tag_ABI_optimization_goals,2
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
