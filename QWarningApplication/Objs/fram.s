; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--c99 --debug -c --asm -o.\objs\fram.o --depend=.\objs\fram.d --apcs=interwork -Otime --diag_suppress=9931 -IC:\Keil\ARM\INC\Phillips -I..\SharedCode -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips --enum_is_int --omf_browse=.\objs\fram.crf fram.c]
        ARM
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

SSP1_HANDLER PROC
|L1.0|
        PUSH     {r0-r3,r12}
        MOV      r1,#0x30000
        ADD      r1,r1,#0xe0000000
        LDR      r0,[r1,#0x1c]
        MOV      r2,#3
        AND      r0,r0,#0xff
        MOV      r3,#1
|L1.28|
        TST      r0,#6
        STRNE    r2,[r1,#0x20]
        TST      r0,#1
        LDRNE    r12,[r1,#8]
        STRNE    r3,[r1,#0x20]
        TST      r0,#4
        LDRNE    r12,[r1,#8]
        TST      r0,#8
        BEQ      |L1.76|
        LDR      r0,[r1,#0x14]
        AND      r0,r0,#8
        STR      r0,[r1,#0x14]
|L1.76|
        LDR      r0,[r1,#0x1c]
        ANDS     r0,r0,#0xff
        BNE      |L1.28|
        STR      r2,[r1,#0x20]
        MOV      r0,#0
        STR      r0,[r0,#-0x100]
        POP      {r0-r3,r12}
        SUBS     pc,lr,#4
        ENDP

readyForOperation PROC
        MOV      r1,#0x30000
        PUSH     {r4,lr}
        ADD      r1,r1,#0xe0000000
        LDR      r2,[r1,#0xc]
        MOV      r0,#0x10000
        TST      r2,#0x10
        BEQ      |L1.176|
|L1.136|
        SUBS     r0,r0,#1
        BCS      |L1.164|
        ADR      r0,|L1.220|
        BL       __2printf
        POP      {r4,lr}
        MOV      r0,#0
        BX       lr
|L1.164|
        LDR      r2,[r1,#0xc]
        TST      r2,#0x10
        BNE      |L1.136|
|L1.176|
        MOV      r0,#7
        STR      r0,[r1,#0]
        LDR      r0,[r1,#0x14]
        BIC      r0,r0,#6
        STR      r0,[r1,#0x14]
        LDR      r0,[r1,#0x14]
        AND      r0,r0,#8
        STR      r0,[r1,#0x14]
        POP      {r4,lr}
        MOV      r0,#1
        BX       lr
|L1.220|
        DCB      "FRAM Busy Time Out\r\n",0
        DCB      0
        DCB      0
        DCB      0
        ENDP

setStatusRegister PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r1
        MOV      r6,r0
        BL       readyForOperation
        LDR      r7,|L1.1420|
        CMP      r0,#0
        MOV      r4,#0x30000
        ADD      r4,r4,#0xe0000000
        MOVEQ    r8,#0
        BEQ      |L1.380|
        BL       enableWriteProtection
        BL       setFramChipSelectLow
        MOV      r0,#5
        STR      r0,[r4,#8]
|L1.300|
        LDR      r0,[r4,#0xc]
        TST      r0,#0x10
        BNE      |L1.300|
        LDR      r0,[r4,#0xc]
        TST      r0,#4
        BEQ      |L1.300|
        LDR      r0,[r4,#8]
        STRB     r0,[r7,#0]  ; dummyRead
        MOV      r0,#0xff
        STR      r0,[r4,#8]
|L1.340|
        LDR      r0,[r4,#0xc]
        TST      r0,#0x10
        BNE      |L1.340|
        LDR      r0,[r4,#0xc]
        TST      r0,#4
        BEQ      |L1.340|
        LDR      r0,[r4,#8]
        STRB     r0,[r7,#0]  ; dummyRead
        BL       setFramChipSelectHigh
        LDRB     r8,[r7,#0]  ; dummyRead
|L1.380|
        BL       readyForOperation
        CMP      r0,#0
        POPEQ    {r4-r8,lr}
        BXEQ     lr
        TST      r8,#0x80
        BEQ      |L1.424|
        CMP      r6,#0
        POPEQ    {r4-r8,lr}
        MOVEQ    r0,#1
        BXEQ     lr
        B        |L1.432|
|L1.424|
        CMP      r6,#0
        BEQ      |L1.568|
|L1.432|
        MOV      r5,#0
|L1.436|
        BL       setWriteLatch
        CMP      r0,#0
        POPEQ    {r4-r8,lr}
        BXEQ     lr
        BL       disableWriteProtection
        BL       setFramChipSelectLow
        MOV      r0,#1
        STR      r0,[r4,#8]
|L1.468|
        LDR      r0,[r4,#0xc]
        TST      r0,#0x10
        BNE      |L1.468|
        LDR      r0,[r4,#0xc]
        TST      r0,#4
        BEQ      |L1.468|
        LDR      r0,[r4,#8]
        STRB     r0,[r7,#0]  ; dummyRead
        STR      r5,[r4,#8]
|L1.504|
        LDR      r0,[r4,#0xc]
        TST      r0,#0x10
        BNE      |L1.504|
        LDR      r0,[r4,#0xc]
        TST      r0,#4
        BEQ      |L1.504|
        LDR      r0,[r4,#8]
        STRB     r0,[r7,#0]  ; dummyRead
|L1.536|
        LDR      r0,[r4,#0xc]
        TST      r0,#0x10
        BNE      |L1.536|
        BL       setFramChipSelectHigh
        BL       enableWriteProtection
        POP      {r4-r8,lr}
        MOV      r0,#1
        BX       lr
|L1.568|
        CMP      r5,#3
        MOVHI    r5,#0
        MOV      r0,#0x80
        ORR      r0,r0,r5,LSL #2
        AND      r5,r0,#0xff
        B        |L1.436|
        ENDP

framInit PROC
        PUSH     {r4,lr}
        BL       enableWriteProtection
        MOV      r4,#0x30000
        MOV      r0,#7
        ADD      r4,r4,#0xe0000000
        STR      r0,[r4,#0]
        MOV      r0,#0
        STR      r0,[r4,#4]
        MOV      r0,#2
        STR      r0,[r4,#0x10]
        LDR      r0,[r4,#4]
        ORR      r0,r0,#2
        STR      r0,[r4,#4]
        MOV      r0,#0
|L1.648|
        LDR      r1,[r4,#8]
        ADD      r0,r0,#1
        AND      r0,r0,#0xff
        CMP      r0,#8
        BCC      |L1.648|
        MOV      r2,#1
        ADR      r1,|L1.0|
        MOV      r0,#0xb
        BL       install_irq
        LDR      r0,[r4,#0x14]
        AND      r0,r0,#8
        STR      r0,[r4,#0x14]
        LDR      r0,[r4,#0x14]
        BIC      r0,r0,#6
        STR      r0,[r4,#0x14]
        POP      {r4,lr}
        MOV      r1,#0
        MOV      r0,r1
        B        setStatusRegister
        ENDP

spewCmdAddress PROC
        MOV      r2,#0x30000
        ADD      r2,r2,#0xe0000000
        STR      r0,[r2,#8]
|L1.736|
        LDR      r0,[r2,#0xc]
        TST      r0,#0x10
        BNE      |L1.736|
        LDR      r0,[r2,#0xc]
        TST      r0,#4
        BEQ      |L1.736|
        LDR      r0,[r2,#8]
        LDR      r3,|L1.1420|
        STRB     r0,[r3,#0]  ; dummyRead
        LSL      r0,r1,#16
        LSR      r0,r0,#24
        STR      r0,[r2,#8]
|L1.784|
        LDR      r0,[r2,#0xc]
        TST      r0,#0x10
        BNE      |L1.784|
        LDR      r0,[r2,#0xc]
        TST      r0,#4
        BEQ      |L1.784|
        LDR      r0,[r2,#8]
        STRB     r0,[r3,#0]  ; dummyRead
        AND      r0,r1,#0xff
        STR      r0,[r2,#8]
|L1.824|
        LDR      r0,[r2,#0xc]
        TST      r0,#0x10
        BNE      |L1.824|
        LDR      r0,[r2,#0xc]
        TST      r0,#4
        BEQ      |L1.824|
        LDR      r0,[r2,#8]
        STRB     r0,[r3,#0]  ; dummyRead
        BX       lr
        ENDP

readFramData PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r2
        MOV      r4,r1
        MOV      r6,r0
        BL       readyForOperation
        CMP      r0,#0
        POPEQ    {r4-r6,lr}
        BXEQ     lr
        BL       enableWriteProtection
        BL       setFramChipSelectLow
        MOV      r1,r6
        MOV      r0,#3
        BL       spewCmdAddress
        SUBS     r0,r5,#1
        LSL      r3,r0,#16
        MOVCS    r0,#0x30000
        LSR      r3,r3,#16
        MOVCS    r2,#0xff
        ADDCS    r0,r0,#0xe0000000
        BCC      |L1.992|
|L1.940|
        STR      r2,[r0,#8]
|L1.944|
        LDR      r1,[r0,#0xc]
        TST      r1,#0x10
        BNE      |L1.944|
        LDR      r1,[r0,#0xc]
        TST      r1,#4
        BEQ      |L1.944|
        LDR      r1,[r0,#8]
        SUBS     r3,r3,#1
        LSL      r3,r3,#16
        LSR      r3,r3,#16
        STRB     r1,[r4],#1
        BCS      |L1.940|
|L1.992|
        BL       setFramChipSelectHigh
        POP      {r4-r6,lr}
        MOV      r0,#1
        BX       lr
        ENDP

writeFramData PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r2
        MOV      r5,r1
        MOV      r4,r0
        BL       readyForOperation
        CMP      r0,#0
        POPEQ    {r4-r6,lr}
        BXEQ     lr
        BL       setWriteLatch
        CMP      r0,#0
        POPEQ    {r4-r6,lr}
        BXEQ     lr
        BL       disableWriteProtection
        BL       setFramChipSelectLow
        MOV      r1,r4
        MOV      r0,#2
        BL       spewCmdAddress
        SUBS     r0,r6,#1
        LDRCS    r2,|L1.1420|
        LSL      r1,r0,#16
        MOV      r4,#0x30000
        LSR      r1,r1,#16
        ADD      r4,r4,#0xe0000000
        BCC      |L1.1160|
|L1.1104|
        LDRB     r0,[r5],#1
        STR      r0,[r4,#8]
|L1.1112|
        LDR      r0,[r4,#0xc]
        TST      r0,#0x10
        BNE      |L1.1112|
        LDR      r0,[r4,#0xc]
        TST      r0,#4
        BEQ      |L1.1112|
        LDR      r0,[r4,#8]
        STRB     r0,[r2,#0]  ; dummyRead
        SUBS     r1,r1,#1
        LSL      r1,r1,#16
        LSR      r1,r1,#16
        BCS      |L1.1104|
|L1.1160|
        BL       setFramChipSelectHigh
        LDR      r0,[r4,#0xc]
        TST      r0,#4
        LDRNE    r1,|L1.1424|
        BEQ      |L1.1200|
|L1.1180|
        LDR      r0,[r4,#8]
        STRB     r0,[r1,#1]  ; rxFrame
        LDR      r0,[r4,#0xc]
        TST      r0,#4
        BNE      |L1.1180|
|L1.1200|
        BL       enableWriteProtection
        POP      {r4-r6,lr}
        MOV      r0,#1
        BX       lr
        ENDP

factoryResetFramDevice PROC
        PUSH     {r4-r6,lr}
        BL       readyForOperation
        CMP      r0,#0
        POPEQ    {r4-r6,lr}
        BXEQ     lr
        BL       setWriteLatch
        CMP      r0,#0
        BEQ      |L1.1400|
        MOV      r5,#0x4000
        SUB      r5,r5,#1
        BL       disableWriteProtection
        BL       setFramChipSelectLow
        MOV      r1,r5
        MOV      r0,#2
        BL       spewCmdAddress
        LDR      r6,|L1.1420|
        MOV      r4,#0x30000
        MOV      r1,#0xff
        ADD      r4,r4,#0xe0000000
|L1.1292|
        STR      r1,[r4,#8]
|L1.1296|
        LDR      r0,[r4,#0xc]
        TST      r0,#0x10
        BNE      |L1.1296|
        LDR      r0,[r4,#0xc]
        TST      r0,#4
        BEQ      |L1.1296|
        LDR      r0,[r4,#8]
        STRB     r0,[r6,#0]  ; dummyRead
        SUBS     r5,r5,#1
        BCS      |L1.1292|
        BL       setFramChipSelectHigh
        LDR      r0,[r4,#0xc]
        TST      r0,#4
        BEQ      |L1.1372|
|L1.1352|
        LDR      r0,[r4,#8]
        STRB     r0,[r6,#0]  ; dummyRead
        LDR      r0,[r4,#0xc]
        TST      r0,#4
        BNE      |L1.1352|
|L1.1372|
        MOV      r1,#0
        MOV      r0,#1
        BL       setStatusRegister
        BL       enableWriteProtection
        POP      {r4-r6,lr}
        MOV      r0,#1
        BX       lr
|L1.1400|
        ADR      r0,|L1.1428|
        BL       __2printf
        POP      {r4-r6,lr}
        MOV      r0,#0
        BX       lr
|L1.1420|
        DCD      ||.data||
|L1.1424|
        DCD      ||.data||+0x1
|L1.1428|
        DCB      "Erase wre error\r\n",0
        DCB      0
        DCB      0
        ENDP

setWriteLatch PROC
        PUSH     {r4,lr}
        BL       readyForOperation
        CMP      r0,#0
        POPEQ    {r4,lr}
        BXEQ     lr
        BL       disableWriteProtection
        BL       setFramChipSelectLow
        MOV      r0,#0x30000
        MOV      r1,#6
        ADD      r0,r0,#0xe0000000
        STR      r1,[r0,#8]
|L1.1492|
        LDR      r1,[r0,#0xc]
        TST      r1,#0x10
        BNE      |L1.1492|
        LDR      r1,[r0,#0xc]
        TST      r1,#4
        BEQ      |L1.1492|
        LDR      r1,[r0,#8]
        LDR      r2,|L1.1420|
        STRB     r1,[r2,#0]  ; dummyRead
|L1.1528|
        LDR      r1,[r0,#0xc]
        TST      r1,#0x10
        BNE      |L1.1528|
        BL       setFramChipSelectHigh
        POP      {r4,lr}
        MOV      r0,#1
        BX       lr
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=0

dummyRead
        DCB      0x00
rxFrame
        DCB      0x00,0x00,0x00
        DCDU     0x00000000
        DCB      0x00

        EXPORT SSP1_HANDLER [CODE]
        EXPORT framInit [CODE]
        EXPORT readFramData [CODE]
        EXPORT writeFramData [CODE]
        EXPORT factoryResetFramDevice [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __2printf [CODE]
        IMPORT enableWriteProtection [CODE]
        IMPORT setFramChipSelectLow [CODE]
        IMPORT setFramChipSelectHigh [CODE]
        IMPORT disableWriteProtection [CODE]
        IMPORT install_irq [CODE]

        KEEP readyForOperation
        KEEP setStatusRegister
        KEEP spewCmdAddress
        KEEP setWriteLatch
        KEEP dummyRead
        KEEP rxFrame

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,2
        ATTR SETVALUE Tag_ABI_optimization_goals,2
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
