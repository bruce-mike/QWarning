; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--c99 --debug -c --asm -o.\objs\crc32.o --depend=.\objs\crc32.d --apcs=interwork -Otime --diag_suppress=9931 -IC:\Keil\ARM\INC\Phillips -I..\SharedCode -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips --enum_is_int --omf_browse=.\objs\crc32.crf crc32.c]
        ARM
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

crc32Init PROC
        MVN      r1,#0
        STR      r1,[r0,#0]
        BX       lr
        ENDP

crc32AddByte PROC
        PUSH     {r4}
        LDR      r12,[r0,#0]
        LDR      r3,|L1.276|
        EOR      r1,r1,r12
        AND      r1,r1,#0xff
        MOV      r2,#0
|L1.36|
        TST      r1,#1
        EORNE    r1,r3,r1,LSR #1
        LSREQ    r1,r1,#1
        ADD      r2,r2,#1
        CMP      r2,#8
        BCC      |L1.36|
        EOR      r1,r1,r12,LSR #8
        STR      r1,[r0,#0]
        POP      {r4}
        BX       lr
        ENDP

crc32AddBytes PROC
        CMP      r2,#0
        BXEQ     lr
        PUSH     {r4-r7}
        LDR      r6,|L1.276|
|L1.92|
        LDRB     r3,[r1,#0]
        LDR      r5,[r0,#0]
        MOV      r4,r6
        EOR      r3,r3,r5
        AND      r3,r3,#0xff
        MOV      r12,#0
|L1.116|
        TST      r3,#1
        EORNE    r3,r4,r3,LSR #1
        LSREQ    r3,r3,#1
        ADD      r12,r12,#1
        CMP      r12,#8
        BCC      |L1.116|
        EOR      r3,r3,r5,LSR #8
        SUBS     r2,r2,#1
        ADD      r1,r1,#1
        STR      r3,[r0,#0]
        BNE      |L1.92|
        POP      {r4-r7}
        BX       lr
        ENDP

crc32End PROC
        LDR      r1,[r0,#0]
        MVN      r1,r1
        STR      r1,[r0,#0]
        BX       lr
        ENDP

crc32Calculate PROC
        PUSH     {r4-r6}
        SUBS     r4,r1,#1
        LDRCS    r5,|L1.276|
        MVN      r12,#0
        BCC      |L1.264|
|L1.204|
        LDRB     r1,[r0,#0]
        MOV      r3,r5
        MOV      r2,#0
        EOR      r1,r1,r12
        AND      r1,r1,#0xff
|L1.224|
        TST      r1,#1
        EORNE    r1,r3,r1,LSR #1
        LSREQ    r1,r1,#1
        ADD      r2,r2,#1
        CMP      r2,#8
        BCC      |L1.224|
        SUBS     r4,r4,#1
        EOR      r12,r1,r12,LSR #8
        ADD      r0,r0,#1
        BCS      |L1.204|
|L1.264|
        POP      {r4-r6}
        MVN      r0,r12
        BX       lr
        ENDP

|L1.276|
        DCD      0xedb88320

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        EXPORT crc32Init [CODE]
        EXPORT crc32AddByte [CODE]
        EXPORT crc32AddBytes [CODE]
        EXPORT crc32End [CODE]
        EXPORT crc32Calculate [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,2
        ATTR SETVALUE Tag_ABI_optimization_goals,2
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
