#ifndef PCU_COMMANDS_H
#define PCU_COMMANDS_H

typedef enum ePcuCommands
{
	ePCU_COMMAND_SET_ROW0_ON     	 						= 0x01, 
	ePCU_COMMAND_SET_ROW1_ON     	 						= 0x02, 
	ePCU_COMMAND_SET_ROW2_ON     	 						= 0x03, 
	ePCU_COMMAND_SET_ROW3_ON     	 						= 0x04, 
	ePCU_COMMAND_SET_FAN0_ON     	 						= 0x05, 
	ePCU_COMMAND_SET_FAN1_ON     	 						= 0x06, 
	ePCU_COMMAND_SET_GPS_ON      	 						= 0x07, 
	ePCU_COMMAND_SET_MODEM_ON    	 						= 0x08, 
	ePCU_COMMAND_RESET_DCU    	 	  					= 0x09, 
	ePCU_COMMAND_SET_RADAR_ON     	 					= 0x0A, 
	ePCU_COMMAND_SET_AUX0_ON     	 						= 0x0B, 
	ePCU_COMMAND_SET_AUX1_ON     	 						= 0x0C, 
	ePCU_COMMAND_SET_SOLAR_ON    	 						= 0x0D, 
	ePCU_COMMAND_SET_BATTERY_ON   	 					= 0x0E, 
	ePCU_COMMAND_SET_OV_ON       	 	  				= 0x0F, 
	ePCU_COMMAND_SET_ROW0_OFF    	 	  				= 0x10, 
	ePCU_COMMAND_SET_ROW1_OFF    	 	  				= 0x11, 
	ePCU_COMMAND_SET_ROW2_OFF    	 	  				= 0x12, 
	ePCU_COMMAND_SET_ROW3_OFF    	 	  				= 0x13, 
	ePCU_COMMAND_SET_FAN0_OFF    	 	  				= 0x14, 
	ePCU_COMMAND_SET_FAN1_OFF    	 	  				= 0x15, 
	ePCU_COMMAND_SET_GPS_OFF     	 	  				= 0x16, 
	ePCU_COMMAND_SET_MODEM_OFF   	 	  				= 0x17, 
	ePCU_COMMAND_NOOP_1   	 		  				= 0x18, 
	ePCU_COMMAND_SET_RADAR_OFF     	  				= 0x19, 
	ePCU_COMMAND_SET_AUX0_OFF    	 	  				= 0x1A, 
	ePCU_COMMAND_SET_AUX1_OFF    	 	  				= 0x1B, 
	ePCU_COMMAND_SET_SOLAR_OFF   	 	  				= 0x1C, 
	ePCU_COMMAND_SET_BATTERY_OFF 	 	  				= 0x1D, 
	ePCU_COMMAND_SET_OV_OFF      	 	  				= 0x1E,  
	ePCU_COMMAND_GET_STATUS     							= 0x1F,
	ePCU_COMMAND_NOOP_2										= 0x20,	
	ePCU_COMMAND_SET_RADAR_LED_TOGGLE					= 0x21,
  ePCU_COMMAND_SET_CHRGR_OFF_VOLTAGE 				= 0x22,
  ePCU_COMMAND_SET_CHRGR_ON_VOLTAGE  				= 0x23,
	ePCU_COMMAND_SET_PWR_GOOD_VOLTAGE  				= 0x24,
	ePCU_COMMAND_SET_PWR_HIGH_VOLTAGE  				= 0x25,
  ePCU_COMMAND_SET_PWR_WARN_VOLTAGE  				= 0x26,
  ePCU_COMMAND_SET_LVD_VOLTAGE       				= 0x27,
  ePCU_COMMAND_GET_CHRGR_OFF_VOLTAGE 				= 0x28,
  ePCU_COMMAND_GET_CHRGR_ON_VOLTAGE  				= 0x29,
	ePCU_COMMAND_GET_PWR_GOOD_VOLTAGE  				= 0x30,
	ePCU_COMMAND_GET_PWR_HIGH_VOLTAGE  				= 0x31,
  ePCU_COMMAND_GET_PWR_WARN_VOLTAGE  				= 0x32,
  ePCU_COMMAND_GET_LVD_VOLTAGE       				= 0x33,
	ePCU_COMMAND_SET_PCU_SYS_LED_ON						= 0x34,
	ePCU_COMMAND_SET_PCU_CHARGER_LED_ON				= 0x35,
	ePCU_COMMAND_SET_PCU_ALARM_LED_ON					= 0x36,
	ePCU_COMMAND_SET_PCU_LOW_BATT_LED_ON			= 0x37,
	ePCU_COMMAND_SET_STATUS_RADAR_LED_ON			= 0x38,
	ePCU_COMMAND_SET_STATUS_CHARGER_LED_ON		= 0x39,
	ePCU_COMMAND_SET_STATUS_SCHEDULE_LED_ON		= 0x3A,
	ePCU_COMMAND_SET_PCU_SYS_LED_OFF					= 0x3B,
	ePCU_COMMAND_SET_PCU_CHARGER_LED_OFF			= 0x3C,
	ePCU_COMMAND_SET_PCU_ALARM_LED_OFF				= 0x3D,
	ePCU_COMMAND_SET_PCU_LOW_BATT_LED_OFF			= 0x3E,
	ePCU_COMMAND_SET_STATUS_RADAR_LED_OFF			= 0x3F,
	ePCU_COMMAND_SET_STATUS_CHARGER_LED_OFF		= 0x40,
	ePCU_COMMAND_SET_STATUS_SCHEDULE_LED_OFF	= 0x41,
	ePCU_COMMAND_SET_PCU_SERIAL_NUMBER				= 0x42,
	ePCU_COMMAND_SET_SOLAR_MANUAL_MODE				= 0x43,
    ePCU_COMMAND_GET_RADAR_SPEED                    = 0x44,
    ePCU_COMMAND_GET_CLASSIFIER_SPEED               = 0x45,
    ePCU_COMMAND_SET_UPGRADE_MODE                   = 0x46
}ePCU_COMMANDS;

void pcuCommandDoWork(void);
void pcuCommandInit(void);
void pcuCommandProcessor(eINTERFACE eInterface, PCU_COMMAND_PACKET *pPCUCommandPacket);
#endif
